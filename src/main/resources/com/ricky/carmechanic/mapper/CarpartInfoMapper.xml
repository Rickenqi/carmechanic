<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ricky.carmechanic.mapper.CarpartInfoMapper">
  <resultMap id="BaseResultMap" type="com.ricky.carmechanic.domain.CarpartInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="carpart_id" jdbcType="INTEGER" property="carpartId" />
    <result column="carpart_name" jdbcType="VARCHAR" property="carpartName" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="carpart_price" jdbcType="INTEGER" property="carpartPrice" />
    <result column="reserve_amount" jdbcType="INTEGER" property="reserveAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    carpart_id, carpart_name, manufacturer, carpart_price, reserve_amount
  </sql>
  <select id="selectByExample" parameterType="com.ricky.carmechanic.domain.example.CarpartInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from carpart_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from carpart_info
    where carpart_id = #{carpartId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from carpart_info
    where carpart_id = #{carpartId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ricky.carmechanic.domain.example.CarpartInfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from carpart_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ricky.carmechanic.domain.CarpartInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into carpart_info (carpart_id, carpart_name, manufacturer, 
      carpart_price, reserve_amount)
    values (#{carpartId,jdbcType=INTEGER}, #{carpartName,jdbcType=VARCHAR}, #{manufacturer,jdbcType=VARCHAR}, 
      #{carpartPrice,jdbcType=INTEGER}, #{reserveAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ricky.carmechanic.domain.CarpartInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into carpart_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="carpartId != null">
        carpart_id,
      </if>
      <if test="carpartName != null">
        carpart_name,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="carpartPrice != null">
        carpart_price,
      </if>
      <if test="reserveAmount != null">
        reserve_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="carpartId != null">
        #{carpartId,jdbcType=INTEGER},
      </if>
      <if test="carpartName != null">
        #{carpartName,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="carpartPrice != null">
        #{carpartPrice,jdbcType=INTEGER},
      </if>
      <if test="reserveAmount != null">
        #{reserveAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ricky.carmechanic.domain.example.CarpartInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from carpart_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update carpart_info
    <set>
      <if test="record.carpartId != null">
        carpart_id = #{record.carpartId,jdbcType=INTEGER},
      </if>
      <if test="record.carpartName != null">
        carpart_name = #{record.carpartName,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null">
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.carpartPrice != null">
        carpart_price = #{record.carpartPrice,jdbcType=INTEGER},
      </if>
      <if test="record.reserveAmount != null">
        reserve_amount = #{record.reserveAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update carpart_info
    set carpart_id = #{record.carpartId,jdbcType=INTEGER},
      carpart_name = #{record.carpartName,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      carpart_price = #{record.carpartPrice,jdbcType=INTEGER},
      reserve_amount = #{record.reserveAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ricky.carmechanic.domain.CarpartInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update carpart_info
    <set>
      <if test="carpartName != null">
        carpart_name = #{carpartName,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="carpartPrice != null">
        carpart_price = #{carpartPrice,jdbcType=INTEGER},
      </if>
      <if test="reserveAmount != null">
        reserve_amount = #{reserveAmount,jdbcType=INTEGER},
      </if>
    </set>
    where carpart_id = #{carpartId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ricky.carmechanic.domain.CarpartInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update carpart_info
    set carpart_name = #{carpartName,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      carpart_price = #{carpartPrice,jdbcType=INTEGER},
      reserve_amount = #{reserveAmount,jdbcType=INTEGER}
    where carpart_id = #{carpartId,jdbcType=INTEGER}
  </update>
</mapper>