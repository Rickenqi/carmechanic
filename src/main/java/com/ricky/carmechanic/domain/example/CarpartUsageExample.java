package com.ricky.carmechanic.domain.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CarpartUsageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public CarpartUsageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUsageIdIsNull() {
            addCriterion("usage_id is null");
            return (Criteria) this;
        }

        public Criteria andUsageIdIsNotNull() {
            addCriterion("usage_id is not null");
            return (Criteria) this;
        }

        public Criteria andUsageIdEqualTo(Integer value) {
            addCriterion("usage_id =", value, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdNotEqualTo(Integer value) {
            addCriterion("usage_id <>", value, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdGreaterThan(Integer value) {
            addCriterion("usage_id >", value, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("usage_id >=", value, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdLessThan(Integer value) {
            addCriterion("usage_id <", value, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdLessThanOrEqualTo(Integer value) {
            addCriterion("usage_id <=", value, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdIn(List<Integer> values) {
            addCriterion("usage_id in", values, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdNotIn(List<Integer> values) {
            addCriterion("usage_id not in", values, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdBetween(Integer value1, Integer value2) {
            addCriterion("usage_id between", value1, value2, "usageId");
            return (Criteria) this;
        }

        public Criteria andUsageIdNotBetween(Integer value1, Integer value2) {
            addCriterion("usage_id not between", value1, value2, "usageId");
            return (Criteria) this;
        }

        public Criteria andRepairIdIsNull() {
            addCriterion("repair_id is null");
            return (Criteria) this;
        }

        public Criteria andRepairIdIsNotNull() {
            addCriterion("repair_id is not null");
            return (Criteria) this;
        }

        public Criteria andRepairIdEqualTo(Integer value) {
            addCriterion("repair_id =", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdNotEqualTo(Integer value) {
            addCriterion("repair_id <>", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdGreaterThan(Integer value) {
            addCriterion("repair_id >", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("repair_id >=", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdLessThan(Integer value) {
            addCriterion("repair_id <", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdLessThanOrEqualTo(Integer value) {
            addCriterion("repair_id <=", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdIn(List<Integer> values) {
            addCriterion("repair_id in", values, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdNotIn(List<Integer> values) {
            addCriterion("repair_id not in", values, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdBetween(Integer value1, Integer value2) {
            addCriterion("repair_id between", value1, value2, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdNotBetween(Integer value1, Integer value2) {
            addCriterion("repair_id not between", value1, value2, "repairId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdIsNull() {
            addCriterion("carpart_id is null");
            return (Criteria) this;
        }

        public Criteria andCarpartIdIsNotNull() {
            addCriterion("carpart_id is not null");
            return (Criteria) this;
        }

        public Criteria andCarpartIdEqualTo(Integer value) {
            addCriterion("carpart_id =", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdNotEqualTo(Integer value) {
            addCriterion("carpart_id <>", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdGreaterThan(Integer value) {
            addCriterion("carpart_id >", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("carpart_id >=", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdLessThan(Integer value) {
            addCriterion("carpart_id <", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdLessThanOrEqualTo(Integer value) {
            addCriterion("carpart_id <=", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdIn(List<Integer> values) {
            addCriterion("carpart_id in", values, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdNotIn(List<Integer> values) {
            addCriterion("carpart_id not in", values, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdBetween(Integer value1, Integer value2) {
            addCriterion("carpart_id between", value1, value2, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdNotBetween(Integer value1, Integer value2) {
            addCriterion("carpart_id not between", value1, value2, "carpartId");
            return (Criteria) this;
        }

        public Criteria andUsageAmountIsNull() {
            addCriterion("usage_amount is null");
            return (Criteria) this;
        }

        public Criteria andUsageAmountIsNotNull() {
            addCriterion("usage_amount is not null");
            return (Criteria) this;
        }

        public Criteria andUsageAmountEqualTo(Integer value) {
            addCriterion("usage_amount =", value, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountNotEqualTo(Integer value) {
            addCriterion("usage_amount <>", value, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountGreaterThan(Integer value) {
            addCriterion("usage_amount >", value, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("usage_amount >=", value, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountLessThan(Integer value) {
            addCriterion("usage_amount <", value, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountLessThanOrEqualTo(Integer value) {
            addCriterion("usage_amount <=", value, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountIn(List<Integer> values) {
            addCriterion("usage_amount in", values, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountNotIn(List<Integer> values) {
            addCriterion("usage_amount not in", values, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountBetween(Integer value1, Integer value2) {
            addCriterion("usage_amount between", value1, value2, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("usage_amount not between", value1, value2, "usageAmount");
            return (Criteria) this;
        }

        public Criteria andUsageDateIsNull() {
            addCriterion("usage_date is null");
            return (Criteria) this;
        }

        public Criteria andUsageDateIsNotNull() {
            addCriterion("usage_date is not null");
            return (Criteria) this;
        }

        public Criteria andUsageDateEqualTo(Date value) {
            addCriterionForJDBCDate("usage_date =", value, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("usage_date <>", value, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateGreaterThan(Date value) {
            addCriterionForJDBCDate("usage_date >", value, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("usage_date >=", value, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateLessThan(Date value) {
            addCriterionForJDBCDate("usage_date <", value, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("usage_date <=", value, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateIn(List<Date> values) {
            addCriterionForJDBCDate("usage_date in", values, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("usage_date not in", values, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("usage_date between", value1, value2, "usageDate");
            return (Criteria) this;
        }

        public Criteria andUsageDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("usage_date not between", value1, value2, "usageDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table carpart_usage
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table carpart_usage
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}