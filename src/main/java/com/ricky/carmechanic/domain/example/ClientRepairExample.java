package com.ricky.carmechanic.domain.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ClientRepairExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public ClientRepairExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andRepairIdIsNull() {
            addCriterion("repair_id is null");
            return (Criteria) this;
        }

        public Criteria andRepairIdIsNotNull() {
            addCriterion("repair_id is not null");
            return (Criteria) this;
        }

        public Criteria andRepairIdEqualTo(Integer value) {
            addCriterion("repair_id =", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdNotEqualTo(Integer value) {
            addCriterion("repair_id <>", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdGreaterThan(Integer value) {
            addCriterion("repair_id >", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("repair_id >=", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdLessThan(Integer value) {
            addCriterion("repair_id <", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdLessThanOrEqualTo(Integer value) {
            addCriterion("repair_id <=", value, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdIn(List<Integer> values) {
            addCriterion("repair_id in", values, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdNotIn(List<Integer> values) {
            addCriterion("repair_id not in", values, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdBetween(Integer value1, Integer value2) {
            addCriterion("repair_id between", value1, value2, "repairId");
            return (Criteria) this;
        }

        public Criteria andRepairIdNotBetween(Integer value1, Integer value2) {
            addCriterion("repair_id not between", value1, value2, "repairId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdIsNull() {
            addCriterion("register_id is null");
            return (Criteria) this;
        }

        public Criteria andRegisterIdIsNotNull() {
            addCriterion("register_id is not null");
            return (Criteria) this;
        }

        public Criteria andRegisterIdEqualTo(Integer value) {
            addCriterion("register_id =", value, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdNotEqualTo(Integer value) {
            addCriterion("register_id <>", value, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdGreaterThan(Integer value) {
            addCriterion("register_id >", value, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("register_id >=", value, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdLessThan(Integer value) {
            addCriterion("register_id <", value, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdLessThanOrEqualTo(Integer value) {
            addCriterion("register_id <=", value, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdIn(List<Integer> values) {
            addCriterion("register_id in", values, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdNotIn(List<Integer> values) {
            addCriterion("register_id not in", values, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdBetween(Integer value1, Integer value2) {
            addCriterion("register_id between", value1, value2, "registerId");
            return (Criteria) this;
        }

        public Criteria andRegisterIdNotBetween(Integer value1, Integer value2) {
            addCriterion("register_id not between", value1, value2, "registerId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdIsNull() {
            addCriterion("mechanic_id is null");
            return (Criteria) this;
        }

        public Criteria andMechanicIdIsNotNull() {
            addCriterion("mechanic_id is not null");
            return (Criteria) this;
        }

        public Criteria andMechanicIdEqualTo(Integer value) {
            addCriterion("mechanic_id =", value, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdNotEqualTo(Integer value) {
            addCriterion("mechanic_id <>", value, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdGreaterThan(Integer value) {
            addCriterion("mechanic_id >", value, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("mechanic_id >=", value, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdLessThan(Integer value) {
            addCriterion("mechanic_id <", value, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdLessThanOrEqualTo(Integer value) {
            addCriterion("mechanic_id <=", value, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdIn(List<Integer> values) {
            addCriterion("mechanic_id in", values, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdNotIn(List<Integer> values) {
            addCriterion("mechanic_id not in", values, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdBetween(Integer value1, Integer value2) {
            addCriterion("mechanic_id between", value1, value2, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andMechanicIdNotBetween(Integer value1, Integer value2) {
            addCriterion("mechanic_id not between", value1, value2, "mechanicId");
            return (Criteria) this;
        }

        public Criteria andRepairTaskIsNull() {
            addCriterion("repair_task is null");
            return (Criteria) this;
        }

        public Criteria andRepairTaskIsNotNull() {
            addCriterion("repair_task is not null");
            return (Criteria) this;
        }

        public Criteria andRepairTaskEqualTo(String value) {
            addCriterion("repair_task =", value, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskNotEqualTo(String value) {
            addCriterion("repair_task <>", value, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskGreaterThan(String value) {
            addCriterion("repair_task >", value, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskGreaterThanOrEqualTo(String value) {
            addCriterion("repair_task >=", value, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskLessThan(String value) {
            addCriterion("repair_task <", value, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskLessThanOrEqualTo(String value) {
            addCriterion("repair_task <=", value, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskLike(String value) {
            addCriterion("repair_task like", value, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskNotLike(String value) {
            addCriterion("repair_task not like", value, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskIn(List<String> values) {
            addCriterion("repair_task in", values, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskNotIn(List<String> values) {
            addCriterion("repair_task not in", values, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskBetween(String value1, String value2) {
            addCriterion("repair_task between", value1, value2, "repairTask");
            return (Criteria) this;
        }

        public Criteria andRepairTaskNotBetween(String value1, String value2) {
            addCriterion("repair_task not between", value1, value2, "repairTask");
            return (Criteria) this;
        }

        public Criteria andCarpartIdIsNull() {
            addCriterion("carpart_id is null");
            return (Criteria) this;
        }

        public Criteria andCarpartIdIsNotNull() {
            addCriterion("carpart_id is not null");
            return (Criteria) this;
        }

        public Criteria andCarpartIdEqualTo(Integer value) {
            addCriterion("carpart_id =", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdNotEqualTo(Integer value) {
            addCriterion("carpart_id <>", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdGreaterThan(Integer value) {
            addCriterion("carpart_id >", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("carpart_id >=", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdLessThan(Integer value) {
            addCriterion("carpart_id <", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdLessThanOrEqualTo(Integer value) {
            addCriterion("carpart_id <=", value, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdIn(List<Integer> values) {
            addCriterion("carpart_id in", values, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdNotIn(List<Integer> values) {
            addCriterion("carpart_id not in", values, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdBetween(Integer value1, Integer value2) {
            addCriterion("carpart_id between", value1, value2, "carpartId");
            return (Criteria) this;
        }

        public Criteria andCarpartIdNotBetween(Integer value1, Integer value2) {
            addCriterion("carpart_id not between", value1, value2, "carpartId");
            return (Criteria) this;
        }

        public Criteria andFinishDateIsNull() {
            addCriterion("finish_date is null");
            return (Criteria) this;
        }

        public Criteria andFinishDateIsNotNull() {
            addCriterion("finish_date is not null");
            return (Criteria) this;
        }

        public Criteria andFinishDateEqualTo(Date value) {
            addCriterionForJDBCDate("finish_date =", value, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("finish_date <>", value, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateGreaterThan(Date value) {
            addCriterionForJDBCDate("finish_date >", value, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("finish_date >=", value, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateLessThan(Date value) {
            addCriterionForJDBCDate("finish_date <", value, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("finish_date <=", value, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateIn(List<Date> values) {
            addCriterionForJDBCDate("finish_date in", values, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("finish_date not in", values, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("finish_date between", value1, value2, "finishDate");
            return (Criteria) this;
        }

        public Criteria andFinishDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("finish_date not between", value1, value2, "finishDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table client_repair
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table client_repair
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}